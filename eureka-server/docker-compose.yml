version: '3.8'

services:
  logistic-eureka:
    build: .
    container_name: logistic-eureka
    ports:
      - "8761:8761"
    environment:
      SERVER_PORT: "8761"
    networks:
      - logistic-network

  logistic-auth-service:
    build: ../authentication-service
    container_name: logistic-auth-service
    ports:
      - "8084:8084"
      - "5007:5007"
    environment:
      SERVER_PORT: "8084"
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://logistic-eureka:8761/eureka/
      SPRING_DATASOURCE_URL: jdbc:postgresql://logistic-user-service-postgres:5432/logistic_auth
      SPRING_DATASOURCE_USERNAME: auth_user
      SPRING_DATASOURCE_PASSWORD: auth_password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: true
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
    depends_on:
      - logistic-eureka
    networks:
      - logistic-network

  logistic-user-service-postgres:
    container_name: logistic-user-service-postgres
    image: postgres:13
    environment:
      - POSTGRES_DB=logistic_auth
      - POSTGRES_USER=auth_user
      - POSTGRES_PASSWORD=auth_password
    ports:
      - "5435:5432"
    networks:
      - logistic-network
  adminer:
    image: adminer
    restart: always
    ports:
      - 8081:8080
    networks:
      - logistic-network
  logistic-order-service:
    build: ../order-service
    container_name: logistic-order-service
    ports:
      - "8082:8082"
      - "5005:5005"
    environment:
      SERVER_PORT: "8082"
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://logistic-eureka:8761/eureka/
      SPRING_KAFKA_BOOTSTRAP-SERVERS: kafka:9092
    depends_on:
      - logistic-eureka
    networks:
      - logistic-network

  logistic-delivery-service:
    build: ../deliveryservice
    container_name: logistic-delivery-service
    ports:
      - "8087:8087"
    environment:
      SERVER_PORT: "8087"
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://logistic-eureka:8761/eureka/
      SPRING_KAFKA_BOOTSTRAP-SERVERS: kafka:9092
    depends_on:
      - logistic-eureka
    networks:
      - logistic-network


  postgres-delivery-service:
    image: postgres:13-alpine
    container_name: postgres-delivery-service
    environment:
      POSTGRES_DB: delivery-service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5437:5432"
    networks:
      - logistic-network

  logistic-inventory-service:
    build: ../inventoryservice
    container_name: logistic-inventory-service
    ports:
      - "8086:8086"
    environment:
      SERVER_PORT: "8086"
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://logistic-eureka:8761/eureka/
      SPRING_KAFKA_BOOTSTRAP-SERVERS: kafka:9092
    depends_on:
      - logistic-eureka
    networks:
      - logistic-network


  postgres-order-service:
    image: postgres:13-alpine
    container_name: postgres-order-service
    environment:
      POSTGRES_DB: order-service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    networks:
      - logistic-network

  postgres-inventory-service:
    image: postgres:13-alpine
    container_name: postgres-inventory-service
    environment:
      POSTGRES_DB: inventory-service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5436:5432"
    networks:
      - logistic-network

  logistic-payment-service:
    build: ../payment-service
    container_name: logistic-payment-service
    ports:
      - "8085:8085"
    environment:
      SERVER_PORT: "8085"
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://logistic-eureka:8761/eureka/
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-payment-service:5432/payment-service
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    depends_on:
      - logistic-eureka
      - postgres-payment-service
    networks:
      - logistic-network

  postgres-payment-service:
    image: postgres:13-alpine
    container_name: postgres-payment-service
    environment:
      POSTGRES_DB: payment-service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5434:5432"
    networks:
      - logistic-network

  logistic-gateway:
    build: ../gatewayapi
    container_name: logistic-gateway
    ports:
      - "8083:8083"
      - "5006:5006"
    environment:
      SERVER_PORT: "8083"
      SPRING_CLOUD_GATEWAY_DISCOVERY_LOCATOR_ENABLED: "true"
      SPRING_CLOUD_GATEWAY_DISCOVERY_LOCATOR_LOWERCASE_SERVICEID: "true"
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://logistic-eureka:8761/eureka/
      KEYCLOAK_REALM: logistic-keycloak-realm
      KEYCLOAK_AUTH_SERVER_URL: http://logistic-keycloak:8080/auth
      KEYCLOAK_PUBLIC_CLIENT: "true"
    depends_on:
      - logistic-eureka
      - logistic-keycloak
    networks:
      - logistic-network

  logistic-keycloak-postgres:
    image: postgres:13-alpine
    container_name: logistic-keycloak-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    networks:
      - logistic-network

  logistic-keycloak:
    image: bitnami/keycloak:18.0.2
    container_name: logistic-keycloak
    environment:
      KEYCLOAK_DATABASE_VENDOR: POSTGRESQL
      KEYCLOAK_DATABASE_HOST: logistic-keycloak-postgres
      KEYCLOAK_DATABASE_NAME: keycloak
      KEYCLOAK_DATABASE_USER: postgres
      KEYCLOAK_DATABASE_PASSWORD: password
      KEYCLOAK_ADMIN_USER: admin
      KEYCLOAK_ADMIN_PASSWORD: password
      KEYCLOAK_EXTRA_ARGS: "-Dkeycloak.profile.feature.upload_scripts=enabled -Dkeycloak.profile.feature.admin_fine_grained_authz=enabled -Dkeycloak.profile.feature.scripts=enabled"
    ports:
      - "8080:8080"
    depends_on:
      - logistic-keycloak-postgres
    networks:
      - logistic-network

  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - logistic-network

  kafka:
    image: wurstmeister/kafka:2.13-2.6.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 1
      KAFKA_MESSAGE_MAX_BYTES: 1048576000
      KAFKA_REPLICA_FETCH_MAX_BYTES: 1048576000
      KAFKA_FETCH_MESSAGE_MAX_BYTES: 1048576000
    depends_on:
      - zookeeper
    networks:
      - logistic-network

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
      JVM_OPTS: -Xms32M -Xmx64M
    depends_on:
      - kafka
    networks:
      - logistic-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ../prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - logistic-network

networks:
  logistic-network:
    driver: bridge
